#!/bin/sh

CONTAINER_USER="docker"

ROOT_DIR="dockerfiles"
PWD=$(pwd)
REPOSITORY=${PWD#*"$ROOT_DIR/"}
PLATFORM_OS="linux"
PLATFORM_ARCH="${1:-}"
PRIVILEGED_ARG="--privileged"
SHM_SIZE_ARG="--shm-size=1g"
INTERACTIVE_ARG="-i"
TTY_ARG="-t"
RM_ARG="--rm"
NETWORK_ARG="--network=host"
CONTAINER_EXEC_CMD="/bin/bash"
MOUNT_ARG="-v $HOME:/home/$CONTAINER_USER"

# Mount devices arguments
MOUNT_USB_ARG="-v /dev/bus/usb:/dev/bus/usb/"
MOUNT_DEV_ARG="-v /dev:/dev"
MOUNT_MEDIA_ARG="-v /media/$USER:/media/$CONTAINER_USER:slave"

# Mount devices for NVIDIA SDK Manager argument
USE_FOR_NVIDIA_SDK_MGR=${2:-false}
if [ "$USE_FOR_NVIDIA_SDK_MGR" = true ]; then
    FOR_NVIDIA_SDK_MGR_ARG="$MOUNT_USB_ARG $MOUNT_DEV_ARG $MOUNT_MEDIA_ARG"
else
    FOR_NVIDIA_SDK_MGR_ARG=""
fi

# Enable X11 forwarding
if [ "$DISPLAY" != "" ]; then
    XSOCK=/tmp/.X11-unix
    XAUTH=/tmp/.docker.xauth
    touch $XAUTH
    xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -
    XAUTH_ARG="-v $XSOCK:$XSOCK -v $XAUTH:$XAUTH -e XAUTHORITY=$XAUTH"
    DISPLAY_ARG="-e DISPLAY=$DISPLAY"
fi

if [ "$PLATFORM_ARCH" = "" ]; then
    PLATFORM_ARG=""
    IMAGE="$REPOSITORY"
else
    PLATFORM_ARG="--platform $PLATFORM_OS/$PLATFORM_ARCH"
    IMAGE="$REPOSITORY:$PLATFORM_ARCH"
fi

DOCKER_RUN_CMD="\
    docker run \
    $PRIVILEGED_ARG \
    $SHM_SIZE_ARG \
    $INTERACTIVE_ARG \
    $TTY_ARG \
    $RM_ARG \
    $PLATFORM_ARG \
    $NETWORK_ARG \
    $MOUNT_ARG \
    $XAUTH_ARG \
    $DISPLAY_ARG \
    $FOR_NVIDIA_SDK_MGR_ARG \
    $IMAGE \
    $CONTAINER_EXEC_CMD"

echo $DOCKER_RUN_CMD
$DOCKER_RUN_CMD
